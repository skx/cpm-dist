\ Z80 Assembler - Information                           971228es                                                                A Z80 assembler with local labels is based on J. Cassady's 8080 forth assembler (Forth Dimensions III/6).                                                                                       INTEL mnemonics are used for the 8080 instructions while the Z80specific instructions use TDL (Technical Design Labs) mnemonicsssembler - Load block                            971228esFORTH DEFINITIONS  DECIMAL                                      APPLICATION                                                                                                                     0 WARNING !  ( disable warning messages )                                                                                       CR .( loading Assembler )   2 14 THRU                                                                                           1 WARNING !                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \ Z80 Assembler - Local labels                          971228esFORTH DEFINITIONS  DECIMAL                                      SYSTEM                                                          VOCABULARY ASSEMBLER   ASSEMBLER DEFINITIONS                                                                                    \ Number of labels and forward references                       20 CONSTANT LMAX  \ maximum local labels                        25 CONSTANT FMAX  \ maximum forward references                                                                                  \ Label and forward references table                            CREATE LTBL  LMAX  2* ALLOT  \ holds label addresses            CREATE FTBL  FMAX 4 * ALLOT  \ holds forward references                                                                         \ Reset labels                                                  : !REF  ( -- )                                                    LTBL LMAX 2* ERASE  FTBL FMAX 4 * ERASE ;                     \ Z80 Assembler - Local labels                          971228es\ Add forward references to table                               : +REF  ( adr -- )                                                HERE 1+ ( current address)                                      FMAX 1+  0  DO                                                    I FMAX = ABORT" too many forward references"                    I 4 *  FTBL +  DUP @  0=  IF                                      SWAP OVER !  2+ !  0 0 LEAVE                                  ELSE  DROP  THEN                                              LOOP 2DROP ;                                                                                                                  \ Check for Z80 relative jump                                   : ?REL  ( opc -- flag )                                           DUP 199 AND 0=  SWAP  48 AND  AND ;                                                                                                                                                           \ Z80 Assembler - Local labels                          971228es\ Check relative offset is within range                         : ?OFF  ( offs -- offs )                                          DUP  -128 128 WITHIN  0= ABORT" relative jump out of range" ;                                                                 \ Resolve all forward references                                : ?REF  ( -- )                                                    FMAX 0  DO                                                        I 4 *  FTBL +  2@  DUP IF ( fwdref )                              SWAP  2*  LTBL +  @  DUP 0= ABORT" unresolved reference"        OVER 1- C@  ?REL  IF  ( z80 relative jump)                        OVER 1+ -  ?OFF  SWAP C!  ELSE SWAP ! THEN                  ELSE  2DROP  THEN  LOOP ;                                                                                                                                                                                                                                   \ Z80 Assembler - Local labels                          971228es\ Check label number                                            : ?LAB  ( n -- n )                                                1- DUP 0 LMAX WITHIN  0= ABORT" invalid label number" ;                                                                       \ Declare label                                                 : $:  ( n -- )                                                    ?LAB 2*  LTBL +  DUP @ ABORT" duplicate label"                  HERE SWAP ! ;                                                                                                                 \ Get label address                                             : $  ( n -- adr )                                                 ?LAB DUP  2* LTBL +  @  SWAP OVER                               IF  DROP  ELSE  +REF  DROP HERE ( dummy adr) THEN ;                                                                                                                                           \ Z80 Assembler - IX IY modes                           971228esHEX                                                             VARIABLE MODE  ( non-zero indicates IX or IY in operand )       VARIABLE DISP  ( temp storage for IX, IY displacement )                                                                         : ?XY  ( -- )                                                     MODE @  1 = IF  -1 ALLOT THEN  0 MODE ! ;                                                                                     : ?DSP  ( -- )                                                    MODE @  2 = IF  DISP @ C, THEN  0 MODE ! ;                                                                                    \ Reset local labels and index mode                             : RESET  ( -- )                                                   !REF  0 MODE !  ;                                             DECIMAL                                                                                                                         \ Z80 Assembler - Machine instruction classes           971228esHEX                                                             :  1M  CREATE C,  DOES> C@ C, ;                                 :  2M  CREATE C,  DOES> C@ + C, ?DSP ;                          :  3M  CREATE C,  DOES> C@ SWAP 8 * + C, ?DSP ;                 :  4M  CREATE C,  DOES> C@ C, C, ;                              :  5M  CREATE C,  DOES> C@ C, , ;                               :  6M  CREATE C,  DOES> SWAP HERE 2+ - ?OFF SWAP C@ C, C, ;     :  7M  CREATE C,  DOES> 0ED C, C@ C, ;                          :  8M  CREATE C,  DOES> 0ED C, C@ C, , ;                        :  9M  CREATE C,  DOES> 0CB C, ?DSP C@ + C, ;                   : 10M  CREATE C,  DOES> 0CB C, ?DSP C@ SWAP 8 * + + C, ;        : 11M  CREATE ,   DOES> @ , ;                                   : 12M  CREATE ,   DOES> @ , , ;                                 : 13M  CREATE ,   DOES> COUNT C, ?XY C@ SWAP 8 * + C, ;         DECIMAL                                                         \ Z80 Assembler - Mnemonics                             971228esHEX                                                             000 1M NOP   007 1M RLC   008 1M EXAF  00F 1M RRC   017 1M RAL  01F 1M RAR   027 1M DAA   02F 1M CMA   037 1M STC   03F 1M CMC  076 1M HLT   0C0 1M RNZ   0C8 1M RZ    0C9 1M RET   0D0 1M RNC  0D8 1M RC    0D9 1M EXX   0E0 1M RPO   0E3 1M XTHL  0E8 1M RPE  0E9 1M PCHL  0EB 1M XCHG  0F0 1M RP    0F3 1M DI    0F8 1M RM   0F9 1M SPHL  0FB 1M EI                                                                                                          080 2M ADD   088 2M ADC   090 2M SUB   098 2M SBB   0A0 2M ANA  0A8 2M XRA   0B0 2M ORA   0B8 2M CMP                                                                                            002 3M STAX  003 3M INX   004 3M INR   005 3M DCR   009 3M DAD  00A 3M LDAX  00B 3M DCX   0C1 3M POP   0C5 3M PUSH  0C7 3M RST  DECIMAL                                                                                                                         \ Z80 Assembler - Mnemonics                             971228esHEX                                                             0C6 4M ADI   0CE 4M ACI   0D3 4M OUT   0D6 4M SUI   0DB 4M IN   0DE 4M SBI   0E6 4M ANI   0EE 4M XRI   0F6 4M ORI   0FE 4M CPI                                                                  022 5M SHLD  02A 5M LHLD  032 5M STA   03A 5M LDA   0C2 5M JNZ  0C3 5M JMP   0C4 5M CNZ   0CA 5M JZ    0CC 5M CZ    0CD 5M CALL 0D2 5M JNC   0D4 5M CNC   0DA 5M JC    0DC 5M CC    0E2 5M JPO  0E4 5M CPO   0EA 5M JPE   0EC 5M CPE   0F2 5M JP    0F4 5M CP   0FA 5M JM    0FC 5M CM                                                                                                          010 6M DJNZ  018 6M JMPR  020 6M JRNZ  028 6M JRZ   030 6M JRNC 038 6M JRC                                                      DECIMAL                                                                                                                                                                                         \ Z80 Assembler - Mnemonics                             971228esHEX                                                             044 7M NEG   045 7M RETN  046 7M IM0   047 7M STAI  04D 7M RETI 04F 7M STAR  056 7M IM1   057 7M LDAI  05E 7M IM2   05F 7M LDAR 067 7M RRD   06F 7M RLD   0A0 7M LDI   0A1 7M CCI   0A2 7M INI  0A3 7M OUTI  0A8 7M LDD   0A9 7M CCD   0AA 7M IND   0AB 7M OUTD 0B0 7M LDIR  0B1 7M CCIR  0B2 7M INIR  0B3 7M OUTIR 0B8 7M LDDR 0B9 7M CCDR  0BA 7M INDR  0BB 7M OUTDR                                                                                          043 8M SBCD  04B 8M LBCD  053 8M SDED  05B 8M LDED  073 8M SSPD 07B 8M LSPD                                                                                                                     000 9M RLCR  008 9M RRCR  010 9M RALR  018 9M RARR  020 9M SLAR 028 9M SRAR  038 9M SRLR                                        DECIMAL                                                                                                                         \ Z80 Assembler - Mnemonics                             971228esHEX                                                             040 10M BIT   080 10M RES   0C0 10M SET                                                                                         0E3DD 11M XTIX  0E9DD 11M PCIX  0F9DD 11M SPIX  0E3FD 11M XTIY  0E9FD 11M PCIY  0F9FD 11M SPIY                                                                                                  022DD 12M SIXD  022FD 12M SIYD  02ADD 12M LIXD  02AFD 12M LIYD                                                                  009DD 13M DADX  009FD 13M DADY  040ED 13M INP   041ED 13M OUTP  042ED 13M DSBC  04AED 13M DADC                                                                                                  : MOV  8 *  40 +  +  C,  ?DSP ;                                 : MVI  8 *  6 +  C,  ?DSP  C, ;                                 : LXI  8 *  1+  C,  , ;                                         DECIMAL                                                         \ Z80 Assembler - Registers                             971228esHEX                                                             0 CONSTANT B    1 CONSTANT C    2 CONSTANT D    3 CONSTANT E    4 CONSTANT H    5 CONSTANT L    6 CONSTANT M    6 CONSTANT PSW  6 CONSTANT SP   7 CONSTANT A                                    : X  ( -- 4 )  0DD C,  1 MODE !  4 ;                            : Y  ( -- 4 )  0FD C,  1 MODE !  4 ;                            : (X)  ( n -- 6 )  DISP !  0DD C,  2 MODE !  6 ;                : (Y)  ( n -- 6 )  DISP !  0FD C,  2 MODE !  6 ;                \ Determine key addresses                                       011D        CONSTANT NEXT       \ Forth address interpreter     NEXT 1-     CONSTANT HPUSH      \ Push HL then NEXT             NEXT 2-     CONSTANT DPUSH      \ Push DE, HL then NEXT         NEXT 4 -    CONSTANT RPP        \ Return stack pointer          NEXT 6 -    CONSTANT UP         \ User area pointer             DECIMAL                                                         \ Z80 Assembler - END-CODE CODE ;CODE                   971228es: END-CODE  ( -- )                                                CURRENT @ CONTEXT !  ?EXEC  ?REF  ?CSP  SMUDGE ;                IMMEDIATE                                                                                                                     FORTH DEFINITIONS                                               : CODE  ( -- )                                                    ?EXEC  CREATE -3 ALLOT  SMUDGE  !CSP                            ASSEMBLER  [ ASSEMBLER ]  RESET  ; IMMEDIATE                                                                                  : ;CODE ( -- )                                                    ?COMP  COMPILE (;CODE)  [COMPILE] [                             ASSEMBLER  [ ASSEMBLER ]  RESET  ; IMMEDIATE                                                                                  FORTH  APPLICATION                                              DECIMAL                                                         \ Z80 Assembler - C: ;C                                 971228es\ Execute high-level Forth definitions from within code         \ definitions                                                                                                                   ASSEMBLER DEFINITIONS  DECIMAL  SYSTEM                          \ Enter high-level forth, saving BC register                    : C:  ( -- )                                                      [ ' :  1+ @ ] LITERAL ( adr of 'DOCOL' )  CALL  FORTH  ] ;                                                                    FORTH DEFINITIONS                                               \ Exit high-level forth, restore BC register                    : ;C  ( -- )                                                      [ ' EXIT  3 + ]  LITERAL ,  ( adr of