\ Editor - Information                                  971228esThis full-screen editor is an enhanced version of that which    appeared in 'Forth - A Text and Reference' by Kelly & Spies.                                                                    Use:  n EDIT  (edit screen number n)                                  WHERE   (edit screen where error occured)                                                                                 Ctl-D  Right cursor   Ctl-Y  Delete line    Ctl-C  Next block   Ctl-S  Left cursor    Ctl-N  Insert line    Ctl-R  Prev Block   Ctl-E  Up cursor      Ctl-T  Erase to EOL   Ctl-L  Restore blk  Ctl-X  Down cursor    Ctl-A  Save line      Ctl-J  Jump to blk  Ctl-I  Tab cursor     Ctl-P  Restore line   Ctl-K  Update block Ctl-Q  Home cursor    Ctl-O  Open-up line   Ctl-V  Insert toggleCtl-G  Del next char  Ctl-W  Split line     Ctl-B  Redraw screenCtl-H  Del prev char  Ctl-F  Join line      Ctl-Z  Clear scr/bufCtl-U  Exit editor                                              \ Editor - load block                                   971228esFORTH DEFINITIONS  DECIMAL                                      APPLICATION                                                                                                                     CR .( loading Screen Editor )    2 24 THRU                      CR .( loading Screen Utilitiesditor - EDITOR B/BUF C/L DX DY TABSIZE ROW COL INS   971228esFORTH DEFINITIONS  DECIMAL                                      SYSTEM                                                          VOCABULARY EDITOR                                               EDITOR DEFINITIONS                                                                                                              1024 CONSTANT B/BUF         \ bytes per block buffer            64   CONSTANT C/L           \ columns per screen line           8    CONSTANT DX            \ screen x offset                   3    CONSTANT DY            \ screen y offset                   4    CONSTANT TABSIZE       \ tab increment                                                                                     VARIABLE ROW                \ cursor row position               VARIABLE COL                \ cursor col position               VARIABLE INS                \ insert mode flag                                                                                  \ Editor - BELL SPAUSE HIGHBLK                          971228es\ Warning sound                                                 : BELL  ( -- )                                                    7 EMIT ;                                                      \ Short pause                                                   : SPAUSE  ( -- )                                                  800 MS ;                                                      \ Highest block number                                          : HIGHBLK  ( -- u )                                               #SCREENS 1-  0 MAX ;                                                                                                                                                                                                                                                                                                                                                                                                                                          \ Editor - !CURSOR @CURSOR CXY ^E ^X                    971228es\ Save cursor pos                                               : !CURSOR  ( y x -- )                                             COL !  ROW ! ;                                                \ Get cursor pos                                                : @CURSOR  ( -- y x )                                             ROW @  COL @ ;                                                \ Restore cursor pos                                            : CXY  ( -- )                                                     @CURSOR DX +  SWAP DY +  AT-XY ;                              \ ^E  move cursor up one position                               : UP  ( -- )                                                      ROW @  0>  IF  -1 ROW +!  CXY  THEN ;                         \ ^X  move cursor down one position                             : DOWN  ( -- )                                                    ROW @ 15 <  IF  1 ROW +!  CXY  THEN ;                         \ Editor - ^S ^D ^Q ^I                                  971228es\ ^S  move cursor left one position                             : LEFT  ( -- )                                                    COL @  0>  IF  -1 COL +!  CXY  THEN ;                         \ ^D  move cursor right one position                            : RIGHT  ( -- )                                                   COL @  C/L 1-  <  IF  1 COL +!  CXY  THEN ;                   \ ^Q  Move cursor to home position                              : HOME  ( -- )                                                    0 0 !CURSOR  CXY ;                                            \ ^I  Move cursor to next tab position                          : TAB  ( -- )                                                     TABSIZE  COL @                                                  OVER  MOD -  0 DO  RIGHT  LOOP  CXY ;                                                                                                                                                         \ Editor - SOL ^M LSTART LEND                           971228es\ Move cursor to start of current line                          : SOL  ( -- )                                                     0 COL !  CXY ;                                                \ ^M  Move cursor to start of next line                         : NEWLINE  ( -- )                                                 SOL DOWN ;                                                    \ Line start address                                            : LSTART  ( -- adr )                                              PAD  ROW @  C/L *  + ;                                        \ Line end address                                              : LEND  ( -- adr )                                                LSTART  C/L 1-  + ;                                                                                                                                                                                                                                           \ Editor - CPOS BLINE LBUFF BBELOW BLEFT                971228es\ Cursor position address                                       : CPOS  ( -- adr )                                                LSTART  COL @  + ;                                            \ Buffer address                                                : BLINE  ( -- adr )                                               B/BUF 2*  PAD + ;                                             \ Line buffer address                                           : LBUFF  ( -- adr )                                               BLINE  C/L + ;                                                \                                                               : BBELOW ( -- n )                                                 16  ROW @  -  C/L *  B/BUF + ;                                \ Number of chars from cursor to end-of-line                    : BLEFT  ( -- n )                                                 LEND CPOS - ;                                                 \ Editor - .BORDER .LINE                                971228es\ Draw border                                                   : .BORDER ( -- )                                                  DX DY 1- AT-XY  C/L 1- 0  DO                                      I  TABSIZE 2*  MOD                                              IF  [CHAR] -  ELSE  [CHAR] !  THEN                              EMIT  LOOP                                                    [CHAR] !  EMIT                                                  0 DY AT-XY                                                      16 0  DO                                                          I  DX 2- .R  CR  LOOP                                         CR  ." Buffer" ;                                              \ Display line from cursor position to end                      : .LINE ( -- )                                                    CLEAR-LINE                                                      CPOS BLEFT 1+  -TRAILING TYPE  CXY ;                          \ Editor - .LINES .MODE .STATUS                         971228es\ Display all screen lines                                      : .LINES  ( -- )                                                  @CURSOR  16  ROW @  DO                                            I ROW !                                                         SOL .LINE  LOOP                                               !CURSOR  CXY ;                                                \ Display insert status                                         : .MODE  ( -- )                                                   65 0 AT-XY                                                      INS @  IF  ." Insert"  ELSE  6 SPACES  THEN ;                 \ Display screen number and filename                            : .STATUS  ( -- )                                                 2 0 AT-XY  ." Scr # "  SCR @ .  SPACE                           16 0 AT-XY  FILENAME TYPE  CXY ;                                                                                              \ Editor - .LBUF .BLOCK ^V SCLEAR BCLEAR                971228es\ Display one-line buffer                                       : .LBUF  ( -- )                                                   DX 20 AT-XY  LBUFF C/L TYPE  CXY ;                            \ ^V  Toggle insert mode                                        : MODE  ( -- )                                                    INS @ NOT INS !  .MODE  CXY ;                                 \ Display status line and screen lines                          : .BLOCK  ( -- )                                                  @CURSOR  HOME .STATUS .LINES  !CURSOR CXY ;                   \ Clear screen                                                  : SCLEAR  ( -- )                                                  PAD B/BUF BLANK  .BLOCK ;                                     \ Clear circular buffer                                         : BCLEAR  ( -- )                                                  PAD B/BUF +  [ B/BUF C/L + ] LITERAL  BLANK ;                 \ Editor - LBCLEAR LOADBLK ^L SAVEBLK                   971228es\ Clear one line buffer                                         : LBCLEAR  ( -- )                                                 LBUFF C/L BLANK ;                                             \ Load block                                                    : LOADBLK  ( -- )                                                 SCR @ BLOCK  PAD B/BUF CMOVE ;                                \ ^L  Reload block and display it                               : RESTORE  ( -- )                                                 LOADBLK .BLOCK ;                                              \ Save block and update                                         : SAVEBLK  ( -- )                                                 PAD  SCR @ BUFFER  B/BUF CMOVE>                                 UPDATE ;                                                                                                                                                                                      \ Editor - ^C ^R ?KEY                                   971228es\ ^C  Go to next block                                          : +BLK  ( -- )                                                    SCR @  HIGHBLK <  IF                                              1 SCR +!  RESTORE  THEN ;                                   \ ^R  Go to previous block                                      : -BLK  ( -- )                                                    SCR @  0>  IF                                                     -1 SCR +!  RESTORE  THEN ;                                  \ Get key and display if printable                              : ?KEY  ( -- c )                                                  KEY UPCASE                                                      DUP  32 127 WITHIN  IF                                            DUP EMIT  THEN ;                                                                                                                                                                            \ Editor - CLRMSG ^Z                                    971228es\ Clear space for msg at bottom of screen                       : CLRMSG  ( -- )                                                  [ DX 6 - ] LITERAL 22 AT-XY  CLEAR-LINE ;                     \ ^Z  Clear screen or buffer                                    : ?CLEAR  ( -- )                                                  CLRMSG  ." * * * CLEAR-OUT: (B)uffer, (S)creen ? "              ?KEY DUP [CHAR] B =  IF                                           DROP BCLEAR                                                   ELSE                                                              [CHAR] S =  IF                                                    SCLEAR HOME  THEN                                           THEN                                                            CLRMSG  CXY ;                                                                                                                                                                                 \ Editor - ^U ^T                                        971228es\ ^U  Quit editor                                               : ?EXIT  ( -- )                                                   CLRMSG  ." * * * EXIT: (S)ave, (Q)uit ? "                       ?KEY DUP [CHAR] S =  IF                                           DROP  UPDATE FLUSH  1+  EXIT                                  ELSE                                                              [CHAR] Q =  IF                                                    EMPTY-BUFFERS  1+  EXIT  THEN                               THEN                                                            CLRMSG CXY ;                                                  \ ^T  Delete from cursor to end of line                         : TRUNC  ( -- )                                                   CPOS BLEFT 1+  DUP SPACES  CXY  BLANK ;                                                                                                                                                       \ Editor - (OPEN) ^O                                    971228es\ Open line at cursor                                           : (OPEN)  ( -- )                                                  COL @  C/L <                                                    LEND C@  BL =  AND  IF                                            CPOS DUP 1+ BLEFT CMOVE>                                        BL CPOS C!                                                    ELSE                                                              BELL                                                          THEN ;                                                        \ ^O  Open up line at cursor                                    : OPEN  ( -- )                                                    (OPEN)  .LINE ;                                                                                                                                                                                                                                               \ Editor - ^J ^B                                        971228es\ ^J  Jump to block                                             : JUMP  ( -- )                                                    0 BEGIN                                                           DROP BEGIN                                                        CLRMSG  ." * * * JUMP: Screen (0-" HIGHBLK  0 .R  ." )? "       TIB DUP 80 EXPECT SPAN @  DUP  0= IF                              2DROP CLRMSG CXY EXIT  THEN                                   BL SKIP NUMBER?  UNTIL                                        DROP  DUP  0 HIGHBLK 1+ WITHIN  UNTIL                         SCR !  CLRMSG HOME                                              RESTORE ;                                                     \ ^B  Redraw screen                                             : REDRAW  ( -- )                                                  PAGE  .BORDER  .MODE  .BLOCK  .LBUF ;                                                                                         \ Editor - DEL ^K EUPDATE OVERTYPE                      971228es\ Delete char at cursor                                         : DEL  ( -- )                                                     COL @ C/L <  IF                                                   CPOS 1+  CPOS  BLEFT CMOVE                                      BL LEND C!  .LINE                                             THEN ;                                                        \ ^K  Update and save screen                                    : EUPDATE  ( -- )                                                 SAVEBLK                                                         CLRMSG ." * * * UPDATED BLOCK: "                                SCR @ .  SPAUSE CLRMSG  CXY ;                                 \ Overwrite char at cursor                                      : OVERTYPE  ( c -- )                                              COL @  C/L  < IF  DUP EMIT  CPOS C!  1 COL +!                   ELSE  DROP BELL  THEN ;                                       \ Editor - INSERT ^H ^P                                 971228es\ Insert char at cursor                                         : INSERT  ( c -- )                                                LEND C@  BL =  IF                                                 (OPEN)  OVERTYPE  .LINE                                       ELSE                                                              DROP  BELL  THEN ;                                          \ ^H  Backspace (delete previous character)                     : BSP  ( -- )                                                     COL @  IF  LEFT  DEL  THEN ;                                  \ ^P  Copy from one-line buffer                                 : GET  ( -- )                                                     LBUFF LSTART C/L CMOVE                                          @CURSOR  SOL .LINE  !CURSOR CXY ;                                                                                                                                                             \ Editor - ^A ^Y ^N                                     971228es\ ^A  Copy line to one-line buffer                              : PUT  ( -- )                                                     LSTART LBUFF C/L CMOVE  .LBUF ;                               \ ^Y  Kill line, pushing it to circular buffer                  : KILL  ( -- )                                                    LSTART BLINE C/L CMOVE                                          LSTART  C/L +  LSTART  BBELOW CMOVE                             .LINES ;                                                      \ ^N  Insert line from circular buffer                          : ILINE  ( -- )                                                   LSTART  DUP C/L +  BBELOW CMOVE>                                BLINE  LSTART  C/L CMOVE                                        .LINES ;                                                                                                                                                                                      \ Editor - ^W ^F                                        971228es\ ^W  Split line at cursor                                      : SPLIT  ( -- )                                                   CPOS  DUP C/L +  BBELOW BLEFT +  CMOVE>                         CPOS C/L BLANK                                                  .LINES ;                                                      \ ^F  Join line with next                                       : JOIN  ( -- )                                                    LSTART  C/L +  0                                                C/L 0 DO                                                          DROP  COUNT BL - IF I LEAVE THEN                                I  LOOP                                                       >R  1-  C/L                                                     R> -  BLEFT 1+  MIN                                             CPOS SWAP CMOVE                                                 .LINES ;                                                      \ Editor - KEYVECTORS                                   981228esCREATE KEYVECTORS ]                                             PUT         ( A save line  )  REDRAW      ( B redraw scr   )    +BLK        ( C next blk   )  RIGHT       ( D right curs   )    UP          ( E up curs    )  JOIN        ( F join line    )    DEL         ( G del char   )  BSP         ( H destruct bs  )    TAB         ( I tab key    )  JUMP        ( J jump to blk  )    EUPDATE     ( K update     )  RESTORE     ( L restore blk  )    NEWLINE     ( M cr         )  ILINE       ( N insert line  )    OPEN        ( O open txt   )  GET         ( P restore line )    HOME        ( Q home curs  )  -BLK        ( R prev block   )    LEFT        ( S left curs  )  TRUNC       ( T truncate lin )    ?EXIT       ( U exit       )  MODE        ( V insert toggl )    SPLIT       ( W split line )  DOWN        ( X down curs    )    KILL        ( Y kill line  )  ?CLEAR      ( Z clr buf/scr  ) [                                                                  \ Editor - KEYDO EDITLOOP                               971228es\ Execute a function                                            : KEYDO  ( n -- )                                                 1-  2*  KEYVECTORS +  @  EXECUTE ;                            \ Main edit loop                                                : EDITLOOP  ( -- )                                                0 BEGIN                               \ exit flag                 KEY  DUP 1 27 WITHIN  IF            \ get a key, if ctrl          KEYDO                             \ execute function          ELSE                                                              DUP 32 127 WITHIN  IF             \ else if char printable        INS @  IF  INSERT  ELSE  OVERTYPE  THEN  \ place it           ELSE                                                              DROP  BELL  THEN                \ else beep error           THEN                                                            DUP UNTIL  DROP ;                   \ repeat until flag true\ Editor - INIT                                         971228es\ Initialisation                                                : INIT  ( scr offs -- )                                           DUP  0 B/BUF WITHIN  AND              \ check and save offset   C/L /MOD  SWAP !CURSOR                                          HIGHBLK MIN  SCR !                    \ check and save screen#  BCLEAR                                \ clear buffer            LBCLEAR                               \ clear one-line buffer   -1 INS !                              \ insert on               LOADBLK                               \ load screen             REDRAW                                \ display it              CXY ;                                 \ position cursor                                                                                                                                                                                                                                                                       \ Editor - (EDIT) EDIT WHERE                            971228es\ Edit screen scr, placing cursor at offset                     : (EDIT)  ( scr offs -- )                                         INIT                                                            EDITLOOP                                                        CR FORTH ;                                                    FORTH DEFINITIONS                                               \ Edit screen u                                                 : EDIT  ( u -- )                                                  0  [ EDITOR ] (EDIT) ;                                        \ Edit screen where LOADing error occured                       : WHERE  ( -- )                                                   SCR 2@  SWAP [ EDITOR ] (EDIT) ;                              FORTH  APPLICATION                                                                                                                                                                              \ Utilities - L N B COPY                                971228esFORTH DEFINITIONS  DECIMAL                                      SYSTEM                                                                                                                          \ Screen listing utilities                                      : L  ( -- )  SCR @  LIST ;      \ list current screen           : N  ( -- )   1 SCR +! ;        \ next screen                   : B  ( -- )  -1 SCR +! ;        \ back screen                                                                                   \ Copy screen u1 to u2                                          : COPY  ( u1 u2 -- )                                              SWAP BLOCK  SWAP BUFFER  1024 CMOVE                             UPDATE  SAVE-BUFFERS ;                                        -->                                                                                                                                                                                             \ Utilities - COPIES                                    971228es\ Copy u3 screens from screen u1 to screen u2                   : COPIES ( u1 u2 u3 -- )                                          SWAP  2 PICK -  >R  1- OVER +                                   CR ." Copy " OVER .  ." thru " DUP .                            ." onto " OVER R@ + .  ." thru " DUP R@ + .                     ." - continue? "  Y/N  0=  IF                                     R> DROP                                                       ELSE                                                              R@ 0< IF  1+ SWAP  1  ELSE  -1  THEN                            R> 2SWAP  DO                                                      I 2DUP +  OVER CR .  ." -> " DUP . COPY                         KEY?  IF  KEY DROP  LEAVE  THEN                                 OVER  +LOOP                                                 THEN  2DROP ;                                                 APPLICATION                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     